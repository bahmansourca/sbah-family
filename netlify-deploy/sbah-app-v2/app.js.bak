// Base de données simulée avec localStorage
const DB = {
    // Initialiser la base de données avec l'administrateur par défaut
    init: function() {
        if (!localStorage.getItem('sbahFamilyUsers')) {
            localStorage.setItem('sbahFamilyUsers', JSON.stringify([
                {
                    id: 1,
                    name: 'Thierno Sadou Bah',
                    email: 'admin@sbahfamily.com',
                    phone: '622538185',
                    country: 'Guinée',
                    city: 'Conakry',
                    password: 'admin123',
                    role: 'admin',
                    orangeMoneyAccount: '622538185'
                }
            ]));
        }
        
        if (!localStorage.getItem('sbahFamilyTransactions')) {
            localStorage.setItem('sbahFamilyTransactions', JSON.stringify([
                {
                    id: 1,
                    type: 'deposit',
                    userId: 2,
                    userName: 'Khadija Bah',
                    userCountry: 'Canada',
                    amount: 300000,
                    date: '2025-04-25T10:30:00',
                    description: 'Versement mensuel'
                },
                {
                    id: 2,
                    type: 'deposit',
                    userId: 3,
                    userName: 'Ibrahim Bah',
                    userCountry: 'USA',
                    amount: 300000,
                    date: '2025-04-20T14:45:00',
                    description: 'Versement mensuel'
                }
            ]));
        }
        
        if (!localStorage.getItem('sbahFamilyCeremonies')) {
            localStorage.setItem('sbahFamilyCeremonies', JSON.stringify([
                {
                    id: 1,
                    title: 'Mariage de Fanta',
                    date: '2025-06-15',
                    amount: 2000000,
                    description: 'Mariage de notre soeur Fanta',
                    status: 'upcoming',
                    icon: 'ring'
                },
                {
                    id: 2,
                    title: "Funérailles d'Alpha",
                    date: '2025-02-05',
                    amount: 1000000,
                    description: "Cérémonie de funérailles pour notre oncle Alpha",
                    status: 'completed',
                    icon: 'pray'
                }
            ]));
        }
        
        if (!localStorage.getItem('sbahFamilyBalance')) {
            localStorage.setItem('sbahFamilyBalance', JSON.stringify({
                total: 10000000
            }));
        }

        // Ajouter quelques utilisateurs de démonstration si la base est vide
        const users = JSON.parse(localStorage.getItem('sbahFamilyUsers'));
        if (users.length === 1) {
            users.push(
                {
                    id: 2,
                    name: 'Khadija Bah',
                    email: 'khadija@example.com',
                    phone: '+1234567890',
                    country: 'Canada',
                    city: 'Montreal',
                    password: 'password',
                    role: 'member'
                },
                {
                    id: 3,
                    name: 'Ibrahim Bah',
                    email: 'ibrahim@example.com',
                    phone: '+1987654321',
                    country: 'USA',
                    city: 'New York',
                    password: 'password',
                    role: 'member'
                },
                {
                    id: 4,
                    name: 'Aissatou Bah',
                    email: 'aissatou@example.com',
                    phone: '+3312345678',
                    country: 'Europe',
                    city: 'Paris',
                    password: 'password',
                    role: 'member'
                }
            );
            localStorage.setItem('sbahFamilyUsers', JSON.stringify(users));
        }
    },
    
    // Méthodes pour les utilisateurs
    users: {
        getAll: function() {
            return JSON.parse(localStorage.getItem('sbahFamilyUsers') || '[]');
        },
        getById: function(id) {
            const users = this.getAll();
            return users.find(user => user.id === id);
        },
        getByEmail: function(email) {
            const users = this.getAll();
            return users.find(user => user.email.toLowerCase() === email.toLowerCase());
        },
        add: function(user) {
            const users = this.getAll();
            user.id = users.length > 0 ? Math.max(...users.map(u => u.id)) + 1 : 1;
            users.push(user);
            localStorage.setItem('sbahFamilyUsers', JSON.stringify(users));
            return user;
        },
        update: function(updatedUser) {
            const users = this.getAll();
            const index = users.findIndex(user => user.id === updatedUser.id);
            if (index !== -1) {
                users[index] = { ...users[index], ...updatedUser };
                localStorage.setItem('sbahFamilyUsers', JSON.stringify(users));
                return true;
            }
            return false;
        }
    },
    
    // Méthodes pour les transactions
    transactions: {
        getAll: function() {
            return JSON.parse(localStorage.getItem('sbahFamilyTransactions') || '[]');
        },
        getById: function(id) {
            const transactions = this.getAll();
            return transactions.find(tx => tx.id === id);
        },
        getByType: function(type) {
            const transactions = this.getAll();
            return transactions.filter(tx => tx.type === type);
        },
        getByUserId: function(userId) {
            const transactions = this.getAll();
            return transactions.filter(tx => tx.userId === userId);
        },
        add: function(transaction) {
            const transactions = this.getAll();
            transaction.id = transactions.length > 0 ? Math.max(...transactions.map(t => t.id)) + 1 : 1;
            transactions.push(transaction);
            localStorage.setItem('sbahFamilyTransactions', JSON.stringify(transactions));
            
            // Mettre à jour le solde
            const balance = this.getBalance();
            if (transaction.type === 'deposit') {
                balance.total += transaction.amount;
            } else if (transaction.type === 'withdrawal') {
                balance.total -= transaction.amount;
            }
            localStorage.setItem('sbahFamilyBalance', JSON.stringify(balance));
            
            return transaction;
        },
        getBalance: function() {
            return JSON.parse(localStorage.getItem('sbahFamilyBalance') || '{"total": 0}');
        }
    },
    
    // Méthodes pour les cérémonies
    ceremonies: {
        getAll: function() {
            return JSON.parse(localStorage.getItem('sbahFamilyCeremonies') || '[]');
        },
        getById: function(id) {
            const ceremonies = this.getAll();
            return ceremonies.find(c => c.id === id);
        },
        getByStatus: function(status) {
            const ceremonies = this.getAll();
            return ceremonies.filter(c => c.status === status);
        },
        add: function(ceremony) {
            const ceremonies = this.getAll();
            ceremony.id = ceremonies.length > 0 ? Math.max(...ceremonies.map(c => c.id)) + 1 : 1;
            ceremonies.push(ceremony);
            localStorage.setItem('sbahFamilyCeremonies', JSON.stringify(ceremonies));
            return ceremony;
        },
        update: function(updatedCeremony) {
            const ceremonies = this.getAll();
            const index = ceremonies.findIndex(c => c.id === updatedCeremony.id);
            if (index !== -1) {
                ceremonies[index] = { ...ceremonies[index], ...updatedCeremony };
                localStorage.setItem('sbahFamilyCeremonies', JSON.stringify(ceremonies));
                return true;
            }
            return false;
        }
    }
};

// Initialiser la base de données
DB.init();

// DOM Elements
// Login & Register
const loginScreen = document.getElementById('login-screen');
const registerScreen = document.getElementById('register-screen');
const mainApp = document.getElementById('main-app');
const loginBtn = document.getElementById('login-btn');
const registerBtn = document.getElementById('register-btn');
const registerLink = document.getElementById('register-link');
const loginLink = document.getElementById('login-link');

// Main Navigation
const navHome = document.getElementById('nav-home');
const navDeposit = document.getElementById('nav-deposit');
const navHistory = document.getElementById('nav-history');
const navCeremonies = document.getElementById('nav-ceremonies');

// Screens
const homeScreen = document.getElementById('home-screen');
const depositScreen = document.getElementById('deposit-screen');
const withdrawScreen = document.getElementById('withdraw-screen');
const historyScreen = document.getElementById('history-screen');
const ceremoniesScreen = document.getElementById('ceremonies-screen');
const addCeremonyScreen = document.getElementById('add-ceremony-screen');
const profileScreen = document.getElementById('profile-screen');
const editProfileScreen = document.getElementById('edit-profile-screen');
const membersScreen = document.getElementById('members-screen');

// Home Screen Elements
const depositAction = document.getElementById('deposit-action');
const historyAction = document.getElementById('history-action');
const ceremoniesAction = document.getElementById('ceremonies-action');
const withdrawAction = document.getElementById('withdraw-action');
const profileIcon = document.getElementById('profile-icon');
const totalBalance = document.getElementById('total-balance');
const recentDeposits = document.getElementById('recent-deposits');
const upcomingCeremonies = document.getElementById('upcoming-ceremonies');

// Back Buttons
const depositBack = document.getElementById('deposit-back');
const withdrawBack = document.getElementById('withdraw-back');
const historyBack = document.getElementById('history-back');
const ceremoniesBack = document.getElementById('ceremonies-back');
const addCeremonyBack = document.getElementById('add-ceremony-back');
const profileBack = document.getElementById('profile-back');
const editProfileBack = document.getElementById('edit-profile-back');
const membersBack = document.getElementById('members-back');

// History Tabs
const depositsTab = document.getElementById('deposits-tab');
const withdrawalsTab = document.getElementById('withdrawals-tab');
const depositsContent = document.getElementById('deposits-content');
const withdrawalsContent = document.getElementById('withdrawals-content');

// Profile Elements
const editProfileBtn = document.getElementById('edit-profile-btn');
const changePasswordBtn = document.getElementById('change-password-btn');
const membersListBtn = document.getElementById('members-list-btn');
const logoutBtn = document.getElementById('logout-btn');

// Ceremony Elements
const addCeremonyBtn = document.getElementById('add-ceremony-btn');
const saveCeremonyBtn = document.getElementById('save-ceremony-btn');
const ceremoniesList = document.getElementById('ceremonies-list');

// Loading Overlay

// Current User Data
let currentUser = null;

// Vérifier si l'utilisateur est déjà connecté
function checkLoggedInUser() {
    const savedUser = localStorage.getItem('currentUser');
    if (savedUser) {
        currentUser = JSON.parse(savedUser);
        loginScreen.classList.add('hidden');
        mainApp.classList.remove('hidden');
        showHomeScreen();
        updateUIForRole(currentUser.role);
        updateProfileInfo();
    }
}

// ... (le reste du code reste inchangé)

// Update UI for user role
function updateUIForRole(role) {
    const adminElements = document.querySelectorAll('.admin-only');
    
    if (role === 'admin') {
        // Afficher les éléments d'administration
        adminElements.forEach(el => el.classList.remove('hidden'));
    } else {
        // Cacher les éléments d'administration
        adminElements.forEach(el => el.classList.add('hidden'));
    }
}

// ... (le reste du code reste inchangé)

// Initialize the app
checkLoggedInUser();

// If no user is logged in, show login screen
if (!currentUser) {
    showLogin();
    navHistory.classList.remove('active');
    navCeremonies.classList.remove('active');
    
    // Update data
    updateBalanceDisplay();
    loadRecentDeposits();
    loadUpcomingCeremonies();
}

function showDepositScreen() {
    homeScreen.classList.add('hidden');
    depositScreen.classList.remove('hidden');
    withdrawScreen.classList.add('hidden');
    historyScreen.classList.add('hidden');
    ceremoniesScreen.classList.add('hidden');
    addCeremonyScreen.classList.add('hidden');
    profileScreen.classList.add('hidden');
    editProfileScreen.classList.add('hidden');
    membersScreen.classList.add('hidden');
    
    // Update navigation
    navHome.classList.remove('active');
    navDeposit.classList.add('active');
    navHistory.classList.remove('active');
    navCeremonies.classList.remove('active');
}

function showWithdrawScreen() {
    homeScreen.classList.add('hidden');
    depositScreen.classList.add('hidden');
    withdrawScreen.classList.remove('hidden');
    historyScreen.classList.add('hidden');
    ceremoniesScreen.classList.add('hidden');
    addCeremonyScreen.classList.add('hidden');
    profileScreen.classList.add('hidden');
    editProfileScreen.classList.add('hidden');
    membersScreen.classList.add('hidden');
    
    // Charger la liste des cérémonies pour le sélecteur
    loadCeremoniesForSelect();
}

function showHistoryScreen() {
    homeScreen.classList.add('hidden');
    depositScreen.classList.add('hidden');
    withdrawScreen.classList.add('hidden');
    historyScreen.classList.remove('hidden');
    ceremoniesScreen.classList.add('hidden');
    addCeremonyScreen.classList.add('hidden');
    profileScreen.classList.add('hidden');
    editProfileScreen.classList.add('hidden');
    membersScreen.classList.add('hidden');
    
    // Update navigation
    navHome.classList.remove('active');
    navDeposit.classList.remove('active');
    navHistory.classList.add('active');
    navCeremonies.classList.remove('active');
    
    // Load transactions
    loadTransactions();
    loadUsersForFilter();
}

function showCeremoniesScreen() {
    homeScreen.classList.add('hidden');
    depositScreen.classList.add('hidden');
    withdrawScreen.classList.add('hidden');
    historyScreen.classList.add('hidden');
    ceremoniesScreen.classList.remove('hidden');
    addCeremonyScreen.classList.add('hidden');
    profileScreen.classList.add('hidden');
    editProfileScreen.classList.add('hidden');
    membersScreen.classList.add('hidden');
    
    // Update navigation
    navHome.classList.remove('active');
    navDeposit.classList.remove('active');
    navHistory.classList.remove('active');
    navCeremonies.classList.add('active');
    
    // Load ceremonies
    loadCeremonies();
}

function showAddCeremonyScreen() {
    homeScreen.classList.add('hidden');
    depositScreen.classList.add('hidden');
    withdrawScreen.classList.add('hidden');
    historyScreen.classList.add('hidden');
    ceremoniesScreen.classList.add('hidden');
    addCeremonyScreen.classList.remove('hidden');
    profileScreen.classList.add('hidden');
    editProfileScreen.classList.add('hidden');
    membersScreen.classList.add('hidden');
}

function showProfileScreen() {
    homeScreen.classList.add('hidden');
    depositScreen.classList.add('hidden');
    withdrawScreen.classList.add('hidden');
    historyScreen.classList.add('hidden');
    ceremoniesScreen.classList.add('hidden');
    addCeremonyScreen.classList.add('hidden');
    profileScreen.classList.remove('hidden');
    editProfileScreen.classList.add('hidden');
    membersScreen.classList.add('hidden');
    
    // Update profile info
    updateProfileInfo();
}

function showEditProfileScreen() {
    homeScreen.classList.add('hidden');
    depositScreen.classList.add('hidden');
    withdrawScreen.classList.add('hidden');
    historyScreen.classList.add('hidden');
    ceremoniesScreen.classList.add('hidden');
    addCeremonyScreen.classList.add('hidden');
    profileScreen.classList.add('hidden');
    editProfileScreen.classList.remove('hidden');
    membersScreen.classList.add('hidden');
    
    // Fill form with current user data
    document.getElementById('edit-name').value = currentUser.name;
    document.getElementById('edit-phone').value = currentUser.phone;
    document.getElementById('edit-country').value = currentUser.country;
    document.getElementById('edit-city').value = currentUser.city;
}

function showMembersScreen() {
    homeScreen.classList.add('hidden');
    depositScreen.classList.add('hidden');
    withdrawScreen.classList.add('hidden');
    historyScreen.classList.add('hidden');
    ceremoniesScreen.classList.add('hidden');
    addCeremonyScreen.classList.add('hidden');
    profileScreen.classList.add('hidden');
    editProfileScreen.classList.add('hidden');
    membersScreen.classList.remove('hidden');
    
    // Load members
    loadMembers();
}
